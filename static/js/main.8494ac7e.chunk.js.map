{"version":3,"sources":["MenuItems.js","service/SteemEngineService.js","page/Holder.js","Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["mainListItems","react_default","a","createElement","ListItem","button","ListItemIcon","Dashboard_default","ListItemText","primary","ShoppingCart_default","People_default","BarChart_default","Layers_default","secondaryListItems","ListSubheader","inset","Assignment_default","ssc","SSC","useStyles","makeStyles","theme","root","width","marginTop","spacing","overflowX","table","minWidth","Holder","classes","_React$useState","React","useState","_React$useState2","Object","slicedToArray","loading","setLoading","_React$useState3","_React$useState4","holders","setHolders","_React$useState5","_React$useState6","orderBy","setOrderBy","sortedHolders","useMemo","sort","b","useEffect","steemEngine","find","symbol","err","result","console","log","map","holder","balance","parseFloat","stake","balanceStakeSum","account","delegatedStake","pendingUnstake","pendingUndelegations","receivedStake","Paper","className","LinearProgress","Table","size","TableHead","TableRow","TableCell","align","TableSortLabel","active","onClick","disablePadding","numeric","TableBody","index","key","component","scope","commaNumber","toFixed","MadeWithLove","Typography","variant","color","Link","href","display","toolbar","paddingRight","toolbarIcon","objectSpread","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","concat","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","defineProperty","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","Dashboard","_ref","match","open","setOpen","clsx","CssBaseline","AppBar","Toolbar","IconButton","edge","aria-label","Menu_default","noWrap","Badge","badgeContent","Notifications_default","Drawer","ChevronLeft_default","Divider","List","Container","maxWidth","Grid","react_router","exact","path","Holders","url","App","react_router_dom","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8494ac7e.chunk.js","sourcesContent":["import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\n\nexport const mainListItems = (\n  <div>\n    <ListItem button>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Dashboard\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <ShoppingCartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Orders\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Customers\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <BarChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Reports\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <LayersIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Integrations\" />\n    </ListItem>\n  </div>\n);\n\nexport const secondaryListItems = (\n  <div>\n    <ListSubheader inset>Saved reports</ListSubheader>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Current month\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Last quarter\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Year-end sale\" />\n    </ListItem>\n  </div>\n);","import SSC from 'sscjs';\n\nconst ssc = new SSC('https://api.steem-engine.com/rpc');\n\nexport default ssc;","import React from \"react\";\nimport commaNumber from \"comma-number\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\n\nimport steemEngine from \"../service/SteemEngineService\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n    overflowX: \"auto\"\n  },\n  table: {\n    minWidth: 650\n  }\n}));\n\nconst Holder = () => {\n  const classes = useStyles();\n\n  const [loading, setLoading] = React.useState(true);\n  const [holders, setHolders] = React.useState([]);\n  const [orderBy, setOrderBy] = React.useState(\"balanceStakeSum\");\n\n  const sortedHolders = React.useMemo(() => {\n    return holders.sort((a, b) => b[orderBy] - a[orderBy]);\n  }, [holders, orderBy]);\n\n  React.useEffect(() => {\n    steemEngine.find(\n      \"tokens\",\n      \"balances\",\n      { symbol: \"ZZAN\" },\n      1000,\n      0,\n      [],\n      (err, result) => {\n        console.log(err, result);\n        if (!err) {\n          const holders = result.map(holder => {\n            const balance = parseFloat(holder.balance || 0);\n            const stake = parseFloat(holder.stake || 0);\n            const balanceStakeSum = balance + stake;\n            return {\n              account: holder.account,\n              balance,\n              delegatedStake: parseFloat(holder.delegatedStake || 0),\n              pendingUnstake: parseFloat(holder.pendingUnstake || 0),\n              pendingUndelegations: parseFloat(\n                holder.pendingUndelegations || 0\n              ),\n              receivedStake: parseFloat(holder.receivedStake || 0),\n              stake,\n              balanceStakeSum\n            };\n          });\n          // .sort((a, b) => b.balanceStakeSum - a.balanceStakeSum);\n          setHolders(holders);\n          //   setOrderBy(\"balanceStakeSum\");\n        }\n        setLoading(false);\n      }\n    );\n  }, []);\n\n  return (\n    // Account\n    <Paper className={classes.root}>\n      {loading ? <LinearProgress /> : null}\n      <Table className={classes.table} size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>No.</TableCell>\n            <TableCell>Account</TableCell>\n            <TableCell align=\"right\">\n              <TableSortLabel\n                active={orderBy === \"balanceStakeSum\"}\n                //   direction={order}\n                onClick={() => setOrderBy(\"balanceStakeSum\")}\n              >\n                Stake+Balance\n              </TableSortLabel>\n            </TableCell>\n            <TableCell align=\"right\" disablePadding=\"none\">\n              <TableSortLabel\n                active={orderBy === \"stake\"}\n                onClick={() => setOrderBy(\"stake\")}\n              >\n                Stake\n              </TableSortLabel>\n            </TableCell>\n            <TableCell align=\"right\">\n              <TableSortLabel\n                active={orderBy === \"balance\"}\n                onClick={() => setOrderBy(\"balance\")}\n              >\n                Balance\n              </TableSortLabel>\n            </TableCell>\n            <TableCell align=\"right\">Pending Unstaking</TableCell>\n            {/* <TableCell align=\"right\">Selling</TableCell> */}\n            {/* <TableCell align=\"right\">Unstaking</TableCell> */}\n            {/* <TableCell align=\"right\">St+Ba원</TableCell> */}\n            {/* <TableCell align=\"right\">VotingPower</TableCell> */}\n            <TableCell align=\"right\" numeric>\n              Delegated\n            </TableCell>\n            <TableCell align=\"right\" numeric>\n              Received\n            </TableCell>\n            {/* <TableCell align=\"right\">Price</TableCell> */}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {sortedHolders.map((holder, index) => (\n            <TableRow key={holder.account}>\n              <TableCell component=\"th\" scope=\"row\">\n                {index + 1}\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\">\n                {holder.account}\n              </TableCell>\n              <TableCell align=\"right\">\n                {holder.balanceStakeSum &&\n                  commaNumber(holder.balanceStakeSum.toFixed(3))}\n              </TableCell>\n              <TableCell align=\"right\" disablePadding=\"none\">\n                {holder.stake && commaNumber(holder.stake.toFixed(3))}\n              </TableCell>\n              <TableCell align=\"right\">\n                {holder.balance && commaNumber(holder.balance.toFixed(3))}\n              </TableCell>\n              <TableCell align=\"right\">\n                {holder.pendingUnstake &&\n                  commaNumber(holder.pendingUnstake.toFixed(3))}\n              </TableCell>\n              <TableCell align=\"right\">\n                {holder.delegatedStake &&\n                  commaNumber(holder.delegatedStake.toFixed(3))}\n              </TableCell>\n              <TableCell align=\"right\">\n                {holder.receivedStake &&\n                  commaNumber(holder.receivedStake.toFixed(3))}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n};\n\nexport default Holder;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Link from \"@material-ui/core/Link\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport { mainListItems, secondaryListItems } from \"./MenuItems\";\n\nimport Holders from \"./page/Holder\";\n\nimport {\n  HashRouter as Router,\n  Route,\n  Link as RouteLink\n} from \"react-router-dom\";\n\nfunction MadeWithLove() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Built with love by the \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Material-UI\n      </Link>\n      {\" team.\"}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: \"none\"\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9)\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\"\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\"\n  },\n  fixedHeight: {\n    height: 240\n  }\n}));\n\nexport default function Dashboard({ match }) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"Open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            Dashboard\n          </Typography>\n          <IconButton color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n        <List>{secondaryListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n              {/* */}\n            <Route exact path=\"/\" component={Holders} />\n            <Route path={`${match.url}/holders`} component={Holders} />\n          </Grid>\n        </Container>\n        <MadeWithLove />\n      </main>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Dashboard from \"./Dashboard\";\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path=\"/\" component={Dashboard} />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}